require "lmkQt"
lmkQt.set_name "QMapControl"
lmk.set_type "shared"
lmk.add_files {
   "circlepoint.h",
   "curve.h",
   "fixedimageoverlay.h",
   "geometry.h",
   "geometrylayer.h",
   "googlemapadapter.h",
   "googlesatmapadapter.h",
   "gps_position.h",
   "imagemanager.h",
   "imagepoint.h",
   "layer.h",
   "layermanager.h",
   "linestring.h",
   "mapadapter.h",
   "mapcontrol.h",
   "maplayer.h",
   "mapnetwork.h",
   "openaerialmapadapter.h",
   "osmmapadapter.h",
   "point.h",
   "qmapcontrol.h",
   "qmapcontrolexport.h",
   "tilemapadapter.h",
   "wmsmapadapter.h",
   "yahoomapadapter.h",
}

lmk.add_files ({
   "curve.h",
   "geometry.h",
   "geometrylayer.h",
   "googlemapadapter.h",
   "googlesatmapadapter.h",
   "imagemanager.h",
   "layer.h",
   "layermanager.h",
   "linestring.h",
   "mapadapter.h",
   "mapcontrol.h",
   "maplayer.h",
   "mapnetwork.h",
   "openaerialmapadapter.h",
   "osmmapadapter.h",
   "point.h",
   "tilemapadapter.h",
   "yahoomapadapter.h",
},{src = "moc"})

lmk.add_files {
   "circlepoint.cpp",
   "curve.cpp",
   "fixedimageoverlay.cpp",
   "geometry.cpp",
   "geometrylayer.cpp",
   "googlemapadapter.cpp",
   "googlesatmapadapter.cpp",
   "gps_position.cpp",
   "imagemanager.cpp",
   "imagepoint.cpp",
   "layer.cpp",
   "layermanager.cpp",
   "linestring.cpp",
   "mapadapter.cpp",
   "mapcontrol.cpp",
   "maplayer.cpp",
   "mapnetwork.cpp",
   "openaerialmapadapter.cpp",
   "osmmapadapter.cpp",
   "point.cpp",
   "tilemapadapter.cpp",
   "wmsmapadapter.cpp",
   "yahoomapadapter.cpp",
}

lmkQt.add_libs {"QtCore","QtGui","QtNetwork",}

lmk.add_vars ({
   localDefines = "$(lmk.defineFlag)QMAPCONTROL_EXPORT"
}, {win32 = true})
